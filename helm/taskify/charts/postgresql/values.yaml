auth:
  username: postgres
  password: postgres
  database: taskify_auth

primary:
  persistence:
    enabled: true
    size: 8Gi
  
  # Initialize multiple databases
  initdb:
    scripts:
      init-db.sql: |
        CREATE DATABASE taskify_organization;
        CREATE DATABASE taskify_project;
        GRANT ALL PRIVILEGES ON DATABASE taskify_organization TO postgres;
        GRANT ALL PRIVILEGES ON DATABASE taskify_project TO postgres;
  
  # Initialize schema for each database
  initContainers:
    - name: init-auth-schema
      image: postgres:16-alpine
      command: ['sh', '-c', 'PGPASSWORD=postgres psql -h postgresql -U postgres -d taskify_auth -f /docker-entrypoint-initdb.d/auth-schema.sql']
      volumeMounts:
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
    - name: init-organization-schema
      image: postgres:16-alpine
      command: ['sh', '-c', 'PGPASSWORD=postgres psql -h postgresql -U postgres -d taskify_organization -f /docker-entrypoint-initdb.d/organization-schema.sql']
      volumeMounts:
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
    - name: init-project-schema
      image: postgres:16-alpine
      command: ['sh', '-c', 'PGPASSWORD=postgres psql -h postgresql -U postgres -d taskify_project -f /docker-entrypoint-initdb.d/project-schema.sql']
      volumeMounts:
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d

  extraVolumes:
    - name: init-scripts
      configMap:
        name: postgresql-init-scripts

service:
  type: ClusterIP
  port: 5432

# Enable metrics for monitoring (optional)
metrics:
  enabled: true
  serviceMonitor:
    enabled: false
